import { Directive, /*BS*/OnDestroy/*BE*/ } from '@angular/core';
/*BS*/import { Subject, takeUntil } from 'rxjs';/*BE*/

/*BS*/import { AuthService } from '../../shared/auth.service';/*BE*/

@Directive({
  selector: '[bmLoggedinOnly]'
})
export class LoggedinOnlyDirective /*BS*/implements OnDestroy/*BE*/ {
  /*BS*/private destroy$ = new Subject<void>();/*BE*/

  constructor(/*BS*/private authService: AuthService/*BE*/) {
    /*BS*/this.authService.isAuthenticated$.pipe(
      takeUntil(this.destroy$)
    ).subscribe(isAuthenticated => {})/*BE*/
  }

  /*BS*/ngOnDestroy(): void {
    this.destroy$.next();
  }/*BE*/
}
